name: Release to Maven Central

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string

jobs:
  build:
    name: Build and Test with Java 8
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven

      - name: Build and test with Java 8
        run: |
          mvn clean compile test -B

  release:
    name: Release to Maven Central Portal
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java 11 (for JReleaser)
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: maven

      - name: Set release version
        run: |
          VERSION="${{ github.event.inputs.version }}"
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          mvn versions:set -DnewVersion=$VERSION
          mvn versions:commit

      - name: Deploy to Maven Central Portal
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          export GPG_TTY=$(tty)
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mvn deploy -B

      - name: Create GitHub Release
        if: success()
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          name: Release v${{ env.RELEASE_VERSION }}
          body: |
            ## Release v${{ env.RELEASE_VERSION }}
            
            ðŸš€ **Published to Maven Central**
            
            ### Maven Dependency
            ```xml
            <dependency>
                <groupId>br.inf.rcconsultoria</groupId>
                <artifactId>paf-nfce</artifactId>
                <version>${{ env.RELEASE_VERSION }}</version>
            </dependency>
            ```
            
            ### Gradle Dependency
            ```gradle
            implementation 'br.inf.rcconsultoria:paf-nfce:${{ env.RELEASE_VERSION }}'
            ```
          draft: false
          prerelease: false
          files: |
            target/paf-nfce-${{ env.RELEASE_VERSION }}.jar
            target/paf-nfce-${{ env.RELEASE_VERSION }}-sources.jar
            target/paf-nfce-${{ env.RELEASE_VERSION }}-javadoc.jar
